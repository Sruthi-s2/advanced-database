Script started on 2025-03-18 00:51:56+00:00 [TERM="xterm-256color" TTY="/dev/pts/3" COLUMNS="78" LINES="17"]
$ pip3 install mongita
Collecting mongita
  Downloading mongita-1.2.0.tar.gz (54 kB)
  Installing build dependencies ... [?25l- \ | done
[?25h  Getting requirements to build wheel ... [?25l- done
[?25h  Preparing metadata (pyproject.toml) ... [?25l- done
[?25hCollecting pymongo<5.0,>=3.0 (from mongita)
  Downloading pymongo-4.11.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (22 kB)
Collecting sortedcontainers<3.0,>=2.3 (from mongita)
  Downloading sortedcontainers-2.4.0-py2.py3-none-any.whl.metadata (10 kB)
Collecting dnspython<3.0.0,>=1.16.0 (from pymongo<5.0,>=3.0->mongita)
  Downloading dnspython-2.7.0-py3-none-any.whl.metadata (5.8 kB)
Downloading pymongo-4.11.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.7 MB)
[?25l   [38;5;237m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m0.0/1.7 MB[0m [31m?[0m eta [36m-:--:--[0m[2K   [38;2;114;156;31m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━[0m [32m1.7/1.7 MB[0m [31m42.8 MB/s[0m eta [36m0:00:00[0m
[?25hDownloading sortedcontainers-2.4.0-py2.py3-none-any.whl (29 kB)
Downloading dnspython-2.7.0-py3-none-any.whl (313 kB)
Building wheels for collected packages: mongita
  Building wheel for mongita (pyproject.toml) ... [?25l- done
[?25h  Created wheel for mongita: filename=mongita-1.2.0-py3-none-any.whl size=61313 sha256=d66120640505c536f50163b98e4d350bcd99e0f717b0c02592461d6c472c1e87
  Stored in directory: /home/codespace/.cache/pip/wheels/c0/bf/0d/6a2a625c704f15045f2e0286f8a819f2104eeaefb92cd42a4f
Successfully built mongita
Installing collected packages: sortedcontainers, dnspython, pymongo, mongita
Successfully installed dnspython-2.7.0 mongita-1.2.0 pymongo-4.11.2 sortedcontainers-2.4.0
$ python
Python 3.12.1 (main, Dec 12 2024, 22:30:56) [GCC 9.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> from mongita import MongitaClientDisk
>>> client = MongitaClientDisk()
>>> hello_world_db = client.hello_world_db
>>> mongoose_collection = hello_world_db.mongoose_collection
>>> mongoose_collection.insert_many([{'name': 'Meercat', 'does_not_eat': 'Snakes'},
...                                      {'name': 'Yellow mongoose', 'eats': 'Termites'}])
<mongita.results.InsertManyResult object at 0x72f53e4d6240>
>>> mongoose_collection.count_documents({})
2
>>> mongoose_collection.update_one({'name': 'Meercat'}, {'$set': {"weight": 2}})
<mongita.results.UpdateResult object at 0x72f53d84a600>
>>> mongoose_collection.find({'weight': {'$gt': 1}})
<mongita.cursor.Cursor object at 0x72f53e25faa0>
>>> cursor = mongoose_collection.find({'weight': {'$gt': 1}})
>>> list[K[K[K[Kcursor
<mongita.cursor.Cursor object at 0x72f53d881670>
>>> list(cursor)
[{'name': 'Meercat', 'does_not_eat': 'Snakes', '_id': ObjectId('67d8c61b5180a31695e90744'), 'weight': 2}]
>>> lenL[K(list(cusor[K[K[Krsor))
0
>>> len(list(cursor))[C[C[C[C[C[5Pist(cursor)[C[C[C[C[6Pcursor = mongoose_collection.find({'weight': {'$gt': 1}})
>>> longiise[K[K[K[K[K[K[K[Kmongii[K[K[Kgoo[Kose_list = list(cursor)
>>> len(mongoose_list)
1
>>> mongoose_list)[K
[{'name': 'Meercat', 'does_not_eat': 'Snakes', '_id': ObjectId('67d8c61b5180a31695e90744'), 'weight': 2}]
>>> mongoose_list[C[C[C[Clen(mongoose_list)[C[C[C[C[5Pmongoose_list[C[C[C[Clen(mongoose_list)
1
>>> list(mongoose_collection.find({'weight': {'$gt': 1}}))
[{'name': 'Meercat', 'does_not_eat': 'Snakes', '_id': ObjectId('67d8c61b5180a31695e90744'), 'weight': 2}]
>>> list(mongoose_collection.find({'weight': {'$gt': 1}}))[C[C[1P))[1P))[1P))[1P))[1P))[1P))[1P))[1P))[1P))[1P))[1P))[1P))[1P))[1P))[1P))[1P))[1P))[1P))[1P))[1P))[1P))[1P))[C[C
[{'name': 'Meercat', 'does_not_eat': 'Snakes', '_id': ObjectId('67d8c61b5180a31695e90744'), 'weight': 2}, {'name': 'Yellow mongoose', 'eats': 'Termites', '_id': ObjectId('67d8c61b5180a31695e90745')}]
>>> list(mongoose_collection.find())_())o())n())e())[C[C[C
['name', 'does_not_eat', '_id', 'weight']
>>> list(mongoose_collection.find_one()){))}))[C[C
['name', 'does_not_eat', '_id', 'weight']
>>> list(mongoose_collection.find_one({}))[1P({}))[1P({}))[1P({}))[1P({}))[C[C[C[1P))[1P))[1P))())[C[C
[{'name': 'Meercat', 'does_not_eat': 'Snakes', '_id': ObjectId('67d8c61b5180a31695e90744'), 'weight': 2}, {'name': 'Yellow mongoose', 'eats': 'Termites', '_id': ObjectId('67d8c61b5180a31695e90745')}]
>>> list(mongoose_collection.find({'weight': {'$gt': 1}}))
[{'name': 'Meercat', 'does_not_eat': 'Snakes', '_id': ObjectId('67d8c61b5180a31695e90744'), 'weight': 2}]
>>> mongoose_collection.delete_one({'name': 'Meercat'})
<mongita.results.DeleteResult object at 0x72f53d8e0140>
>>> mongoose_collection.delete_one({'name': 'Meercat'})[C[C[C[Clist(mongoose_collection.find({'weight': {'$gt': 1}}))))[K_one({}))[2P))[4P()){'weight': {'$gt': 1}}))[C[C[C[C[Cen(mongoose_list)[K[C[C[C[C[5Pmongoose_list[C[C[C[Clen(mongoose_list)[C[C[C[Cmongoose_list = list(cursor)[C[C[C[Ccursor = mongoose_collection.find({'weight': {'$gt': 1}})
>>> cursor = mongoose_collection.find({'weight': {'$gt': 1}})[C[C[C[C[6Pmongoose_collection.delete_one({'name': 'Meercat'})[C[C[C[Clist(mongoose_collection.find({'weight': {'$gt': 1}}))
[]
>>> mongoose_collection.insert_many([{'name': 'Meercat', 'does_not_eat': 'Snakes'}[C])
<mongita.results.InsertManyResult object at 0x72f53d8e01a0>
>>> mongoose_collection.insert_many([{'name': 'Meercat', 'does_not_eat': 'Snakes'}])[A[20Plist(mongoose_collection.find({'weight': {'$gt': 1}}))
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[]
>>> list(mongoose_collection.find({'weight': {'$gt': 1}}))[C[C[C[Cmongoose_collection.insert_many([{'name': 'Meercat', 'does_not_eat': 'Snakes'}])[A[20Plist(mongoose_collection.find({'weight': {'$gt': 1}}))
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccursor = mongoose_collection.find({'weight': {'$gt': 1}})[C[C[C[C[3Plist(mongoose_collection.find({'weight': {'$gt': 1}}))[1P))[1P}))[1P}))[1P}))[1P}))[1P}))[1P}))[1P}))[1P}))[1P}))[1P}))[1P}))[1P}))[1P}))[1P}))[1P}))[1P}))[1P}))[1P}))[1P}))[1P})){}))[C[C[C
[{'name': 'Yellow mongoose', 'eats': 'Termites', '_id': ObjectId('67d8c61b5180a31695e90745')}, {'name': 'Meercat', 'does_not_eat': 'Snakes', '_id': ObjectId('67d8c9615180a31695e90748')}]
>>> 
$ exit

Script done on 2025-03-18 01:27:27+00:00 [COMMAND_EXIT_CODE="0"]
